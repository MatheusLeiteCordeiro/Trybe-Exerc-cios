{"ast":null,"code":"import { getCurrentISSLocation } from '../../services/issAPI';\nexport const RECEIVE_ISS_LOCATION_SUCCESS = 'REQUEST_ISS_LOCATION_SUCCESS';\nexport const RECEIVE_ISS_LOCATION_FAILURE = 'RECEIVE_ISS_LOCATION_FAILURE';\nexport const REQUEST_ISS_LOCATION = 'REQUEST_ISS_LOCATION';\n\nconst requestISSLocation = () => ({\n  type: REQUEST_ISS_LOCATION\n});\n\nconst receiveISSLocationSuccess = issLocation => {\n  return {\n    type: RECEIVE_ISS_LOCATION_SUCCESS,\n    latitude: parseFloat(issLocation.latitude),\n    longitude: parseFloat(issLocation.longitude)\n  };\n};\n\nconst receiveISSLocationFailure = error => ({\n  type: RECEIVE_ISS_LOCATION_FAILURE,\n  error\n});\n\nexport const fetchISSLocation = () => {\n  return async dispatch => {\n    dispatch(requestISSLocation());\n\n    try {\n      const response = await getCurrentISSLocation();\n      dispatch(receiveISSLocationSuccess(response.iss_position));\n    } catch (error) {\n      dispatch(receiveISSLocationFailure(error));\n    }\n  };\n};","map":{"version":3,"names":["getCurrentISSLocation","RECEIVE_ISS_LOCATION_SUCCESS","RECEIVE_ISS_LOCATION_FAILURE","REQUEST_ISS_LOCATION","requestISSLocation","type","receiveISSLocationSuccess","issLocation","latitude","parseFloat","longitude","receiveISSLocationFailure","error","fetchISSLocation","dispatch","response","iss_position"],"sources":["/home/matheus/Dropbox/Trybe/Trybe-Exercícios/Desenvolvimento-Front-End/Sessão-09-Context-API-e-React-Hookes/dia-01-Context-API-do-React/my_app/src/store/actions/index.js"],"sourcesContent":["import { getCurrentISSLocation } from '../../services/issAPI';\n\nexport const RECEIVE_ISS_LOCATION_SUCCESS = 'REQUEST_ISS_LOCATION_SUCCESS';\nexport const RECEIVE_ISS_LOCATION_FAILURE = 'RECEIVE_ISS_LOCATION_FAILURE';\nexport const REQUEST_ISS_LOCATION = 'REQUEST_ISS_LOCATION';\n\nconst requestISSLocation = () => ({\n  type: REQUEST_ISS_LOCATION\n});\n\nconst receiveISSLocationSuccess = (issLocation) => {\n  return {\n    type: RECEIVE_ISS_LOCATION_SUCCESS,\n    latitude: parseFloat(issLocation.latitude),\n    longitude: parseFloat(issLocation.longitude)\n  }\n}\n\nconst receiveISSLocationFailure = (error) => ({\n  type: RECEIVE_ISS_LOCATION_FAILURE,\n  error,\n});\n\nexport const fetchISSLocation = () => {\n  return async (dispatch) => {\n    dispatch(requestISSLocation())\n\n    try {\n      const response = await getCurrentISSLocation();\n      dispatch(receiveISSLocationSuccess(response.iss_position));\n    } catch (error) {\n      dispatch(receiveISSLocationFailure(error));\n    }\n  }\n}\n"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,uBAAtC;AAEA,OAAO,MAAMC,4BAA4B,GAAG,8BAArC;AACP,OAAO,MAAMC,4BAA4B,GAAG,8BAArC;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;;AAEP,MAAMC,kBAAkB,GAAG,OAAO;EAChCC,IAAI,EAAEF;AAD0B,CAAP,CAA3B;;AAIA,MAAMG,yBAAyB,GAAIC,WAAD,IAAiB;EACjD,OAAO;IACLF,IAAI,EAAEJ,4BADD;IAELO,QAAQ,EAAEC,UAAU,CAACF,WAAW,CAACC,QAAb,CAFf;IAGLE,SAAS,EAAED,UAAU,CAACF,WAAW,CAACG,SAAb;EAHhB,CAAP;AAKD,CAND;;AAQA,MAAMC,yBAAyB,GAAIC,KAAD,KAAY;EAC5CP,IAAI,EAAEH,4BADsC;EAE5CU;AAF4C,CAAZ,CAAlC;;AAKA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;EACpC,OAAO,MAAOC,QAAP,IAAoB;IACzBA,QAAQ,CAACV,kBAAkB,EAAnB,CAAR;;IAEA,IAAI;MACF,MAAMW,QAAQ,GAAG,MAAMf,qBAAqB,EAA5C;MACAc,QAAQ,CAACR,yBAAyB,CAACS,QAAQ,CAACC,YAAV,CAA1B,CAAR;IACD,CAHD,CAGE,OAAOJ,KAAP,EAAc;MACdE,QAAQ,CAACH,yBAAyB,CAACC,KAAD,CAA1B,CAAR;IACD;EACF,CATD;AAUD,CAXM"},"metadata":{},"sourceType":"module"}